---
import { IdToSlug } from "../utils/hash";
import { Icon } from "astro-icon/components";
import { GetCoverURLForUnspecifiedEntry } from "../utils/cover";
import { i18n } from "../locales/translation";
import I18nKeys from "../locales/keys";
import YukinaConfig from "../../yukina.config";
import { formatDate } from "../utils/date";
import ResponsiveImage from "./ResponsiveImage.astro";
import type { ReadingMetadata } from "../utils/reading-time";

export interface Props {
  id: string;
  title: string;
  published: Date;
  category?: string;
  tags?: string[];
  description?: string;
  image?: string;
  readingMetadata?: ReadingMetadata;
  lang?: "ja" | "en";
  isCompact?: boolean;
}

const props = Astro.props;
const baseUrl = props.id.startsWith('/') ? props.id : `/posts/${IdToSlug(props.id)}`;
const langParam = props.lang === 'en' ? '?lang=en' : '';
const contentUrl = `${baseUrl}${langParam}`;
const entryID = props.id.startsWith('/') ? props.id.split('/').pop()! : IdToSlug(props.id);
const { time = 0, wordCount = 0 } = props.readingMetadata ?? { time: 0, wordCount: 0 };

const imageUrl = props.image ?? GetCoverURLForUnspecifiedEntry(entryID);
const isCompact = props.isCompact ?? false;
---

{isCompact ? (
  <!-- Compact Mobile Card (for list views) -->
  <article class="mobile-post-card-compact">
    <a href={contentUrl} class="card-link">
      <div class="card-content">
        <div class="card-image">
          <ResponsiveImage
            src={imageUrl}
            alt={props.title}
            width={120}
            height={90}
            loading="lazy"
          />
        </div>
        <div class="card-body">
          <h3 class="card-title">{props.title}</h3>
          <p class="card-description">{props.description}</p>
          <div class="card-meta">
            <span class="meta-date">
              {formatDate(props.published, YukinaConfig.locale)}
            </span>
            {props.category && (
              <>
                <span class="meta-separator">•</span>
                <span class="meta-category">{props.category}</span>
              </>
            )}
            <span class="meta-separator">•</span>
            <span class="meta-reading-time">{time}分</span>
          </div>
        </div>
      </div>
    </a>
  </article>
) : (
  <!-- Full Mobile Card (for featured content) -->
  <article class="mobile-post-card">
    <a href={contentUrl} class="card-link">
      <div class="card-image-container">
        <ResponsiveImage
          src={imageUrl}
          alt={props.title}
          width={400}
          height={240}
          loading="lazy"
          class="card-image-full"
        />
        <div class="card-overlay">
          <div class="overlay-meta">
            <span class="meta-badge">{props.category || "記事"}</span>
            <span class="meta-reading-time">
              <Icon name="mingcute:time-line" width={16} height={16} />
              {time}分
            </span>
          </div>
        </div>
      </div>
      <div class="card-content-full">
        <h2 class="card-title-full">{props.title}</h2>
        <p class="card-description-full">{props.description}</p>
        <div class="card-meta-full">
          <span class="meta-date-full">
            {formatDate(props.published, YukinaConfig.locale)}
          </span>
          {props.tags && props.tags.length > 0 && (
            <div class="meta-tags">
              {props.tags.slice(0, 3).map(tag => (
                <span class="tag-badge">{tag}</span>
              ))}
            </div>
          )}
        </div>
      </div>
    </a>
  </article>
)}

<style>
  /* Compact Mobile Card Styles */
  .mobile-post-card-compact {
    background: var(--card-color);
    border-radius: 16px;
    overflow: hidden;
    margin-bottom: 1rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
    transition: all 0.2s ease;
  }

  .mobile-post-card-compact:active {
    transform: scale(0.98);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .card-link {
    text-decoration: none;
    color: inherit;
    display: block;
  }

  .card-content {
    display: flex;
    padding: 1rem;
    gap: 1rem;
  }

  .card-image {
    flex-shrink: 0;
    width: 100px;
    height: 75px;
    border-radius: 12px;
    overflow: hidden;
    background: var(--border-color);
  }

  .card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .card-body {
    flex: 1;
    min-width: 0;
    display: flex;
    flex-direction: column;
    gap: 0.375rem;
  }

  .card-title {
    font-size: var(--mobile-text-base);
    font-weight: 600;
    line-height: 1.4;
    color: var(--text-color);
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    margin: 0;
  }

  .card-description {
    font-size: var(--mobile-text-sm);
    color: var(--text-color-lighten);
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    margin: 0;
  }

  .card-meta {
    display: flex;
    align-items: center;
    font-size: var(--mobile-text-xs);
    color: var(--text-color-lighten);
    gap: 0.375rem;
    margin-top: auto;
  }

  .meta-separator {
    opacity: 0.5;
  }

  /* Full Mobile Card Styles */
  .mobile-post-card {
    background: var(--card-color);
    border-radius: 20px;
    overflow: hidden;
    margin-bottom: 1.5rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
    transition: all 0.2s ease;
  }

  .mobile-post-card:active {
    transform: scale(0.98);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12);
  }

  .card-image-container {
    position: relative;
    width: 100%;
    height: 200px;
    overflow: hidden;
  }

  .card-image-full {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .card-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 1rem;
    background: linear-gradient(to top, rgba(0, 0, 0, 0.8), transparent);
  }

  .overlay-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .meta-badge {
    background: var(--accent-color);
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: var(--mobile-text-xs);
    font-weight: 600;
  }

  .meta-reading-time {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    color: white;
    font-size: var(--mobile-text-sm);
  }

  .card-content-full {
    padding: 1.25rem;
  }

  .card-title-full {
    font-size: var(--mobile-text-xl);
    font-weight: 700;
    line-height: 1.3;
    color: var(--text-color);
    margin: 0 0 0.75rem 0;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
  }

  .card-description-full {
    font-size: var(--mobile-text-base);
    line-height: 1.6;
    color: var(--text-color-lighten);
    margin: 0 0 1rem 0;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
  }

  .card-meta-full {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 0.75rem;
  }

  .meta-date-full {
    font-size: var(--mobile-text-sm);
    color: var(--text-color-lighten);
  }

  .meta-tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .tag-badge {
    background: var(--primary-color-transparent);
    color: var(--primary-color);
    padding: 0.125rem 0.5rem;
    border-radius: 12px;
    font-size: var(--mobile-text-xs);
    font-weight: 500;
  }

  /* Dark mode adjustments */
  :root.dark .mobile-post-card-compact,
  :root.dark .mobile-post-card {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
  }

  :root.dark .mobile-post-card-compact:active,
  :root.dark .mobile-post-card:active {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
  }

  :root.dark .meta-badge {
    background: var(--primary-color);
  }

  /* Responsive adjustments */
  @media (min-width: 375px) {
    .card-image {
      width: 120px;
      height: 90px;
    }

    .card-image-container {
      height: 240px;
    }
  }

  @media (min-width: 768px) {
    /* Hide mobile cards on larger screens */
    .mobile-post-card-compact,
    .mobile-post-card {
      display: none;
    }
  }

  /* Landscape mode adjustments */
  @media (max-width: 768px) and (orientation: landscape) {
    .card-image-container {
      height: 180px;
    }

    .card-content-full {
      padding: 1rem;
    }
  }

  /* Accessibility */
  @media (prefers-reduced-motion: reduce) {
    .mobile-post-card-compact,
    .mobile-post-card {
      transition: none;
    }
  }

  /* High contrast mode */
  @media (prefers-contrast: high) {
    .mobile-post-card-compact,
    .mobile-post-card {
      border: 1px solid var(--border-color);
    }

    .meta-badge,
    .tag-badge {
      border: 1px solid currentColor;
    }
  }
</style>