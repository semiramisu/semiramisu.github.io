---
// Service Workerの登録
---

<script>
  // Service Workerのサポートをチェック
  if ('serviceWorker' in navigator) {
    window.addEventListener('load', async () => {
      try {
        // Service Workerを登録
        const registration = await navigator.serviceWorker.register('/sw.js', {
          scope: '/'
        });
        
        console.log('Service Worker registered:', registration.scope);
        
        // 更新があったら自動的に適用
        registration.addEventListener('updatefound', () => {
          const newWorker = registration.installing;
          if (newWorker) {
            newWorker.addEventListener('statechange', () => {
              if (newWorker.state === 'activated') {
                // 新しいService Workerがアクティブになったら通知
                if (registration.active) {
                  console.log('Service Worker updated');
                  // オプション: ユーザーに更新を通知
                  showUpdateNotification();
                }
              }
            });
          }
        });
        
        // 定期的に更新をチェック（1時間ごと）
        setInterval(() => {
          registration.update();
        }, 60 * 60 * 1000);
        
      } catch (error) {
        console.error('Service Worker registration failed:', error);
      }
    });
  }
  
  // 更新通知を表示（オプション）
  function showUpdateNotification() {
    // 既存の通知があれば削除
    const existingNotification = document.getElementById('update-notification');
    if (existingNotification) {
      existingNotification.remove();
    }
    
    // 新しい通知を作成
    const notification = document.createElement('div');
    notification.id = 'update-notification';
    notification.innerHTML = `
      <div style="
        position: fixed;
        bottom: 20px;
        right: 20px;
        background: var(--primary-color);
        color: white;
        padding: 16px 24px;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        display: flex;
        align-items: center;
        gap: 12px;
        z-index: 9999;
        animation: slideIn 0.3s ease-out;
      ">
        <span>新しいバージョンが利用可能です</span>
        <button onclick="location.reload()" style="
          background: white;
          color: var(--primary-color);
          border: none;
          padding: 6px 12px;
          border-radius: 4px;
          cursor: pointer;
          font-weight: 500;
        ">
          更新
        </button>
        <button onclick="this.parentElement.parentElement.remove()" style="
          background: transparent;
          color: white;
          border: none;
          padding: 4px;
          cursor: pointer;
          font-size: 20px;
          line-height: 1;
        ">
          ×
        </button>
      </div>
    `;
    
    document.body.appendChild(notification);
    
    // 10秒後に自動的に削除
    setTimeout(() => {
      notification.remove();
    }, 10000);
  }
</script>

<style is:global>
  @keyframes slideIn {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
</style>