---
export interface Props {
  lang?: string;
}

const { lang = 'ja' } = Astro.props;
---

<div class="comments-container">
  <h2 class="comments-title">コメント</h2>
  <div class="giscus"></div>
</div>

<script
  src="https://giscus.app/client.js"
  data-repo="semiramisu/semiramisu.github.io"
  data-repo-id="YOUR_REPO_ID"
  data-category="Announcements"
  data-category-id="YOUR_CATEGORY_ID"
  data-mapping="pathname"
  data-strict="0"
  data-reactions-enabled="1"
  data-emit-metadata="0"
  data-input-position="top"
  data-theme="preferred_color_scheme"
  data-lang={lang}
  data-loading="lazy"
  crossorigin="anonymous"
  async
>
</script>

<style>
  .comments-container {
    @apply max-w-4xl mx-auto px-4 py-8 mt-12;
  }
  
  .comments-title {
    @apply text-2xl font-bold mb-6 text-[var(--text-color)];
    font-family: var(--primary-font);
  }
  
  .giscus {
    @apply w-full;
  }
  
  /* Giscusのテーマ調整 */
  :global(.giscus-frame) {
    @apply rounded-lg;
  }
</style>

<script>
  // テーマ切り替えに対応
  function updateGiscusTheme() {
    const iframe = document.querySelector<HTMLIFrameElement>('iframe.giscus-frame');
    if (!iframe) return;
    
    const theme = document.documentElement.dataset.theme === 'dark' ? 'dark' : 'light';
    
    iframe.contentWindow?.postMessage(
      { giscus: { setConfig: { theme } } },
      'https://giscus.app'
    );
  }
  
  // テーマ変更を監視
  const observer = new MutationObserver(() => {
    updateGiscusTheme();
  });
  
  observer.observe(document.documentElement, {
    attributes: true,
    attributeFilter: ['data-theme']
  });
  
  // 初期化時にもテーマを設定
  document.addEventListener('DOMContentLoaded', () => {
    setTimeout(updateGiscusTheme, 1000);
  });
</script>