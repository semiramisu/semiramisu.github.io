以下の日本語のブログ記事を英語に翻訳してください。

翻訳の際の注意点：
1. 技術用語は適切な英語表現を使用してください
2. 日本語特有の表現は、英語圏の読者にも理解しやすいように意訳してください
3. frontmatterのtitle, description, tagsも翻訳してください
4. コードブロックはそのまま残してください
5. 画像パスやリンクはそのまま残してください
6. 自然で読みやすい英語を心がけてください

元の日本語記事:
```markdown
---
title: 再現性のある仕事をするために
published: 2025-05-27
description: 仕事からクラスを作る
tags: [仕事]
category: 仕事
draft: false
---

# 再現性のある仕事をするために

初仕事のタスクで一つ前進がありました

まぁ、まだタスク完了の兆しは見えていないのですが

少しでも進んだことを喜びたい

この工程で3日（半期目標設計など他タスクと並行して）かかっています

次回以降この類似タスク完了までの時間を短くするために、振り返りをしてみました

その振り返りの内容と考え方をまとめていきます

# 振り返りの内容


1. タスクの全体像を書き出す

2. レビューコメントを書き出す

3. 今後使用できそうなpythonスクリプトをまとめる

## タスクの全体像を書き出す

まず、このタスクの全体像をもう一度書き出します

次に、後から振り返ると既存のプログラムの「どこをどのように」加筆修正したのかまとめます

今回はSQLやdbtなどこれまで触れてこなかった分野の内容が多かったため、どこがどのように繋がっているのか分かっていませんでした

そのため回り道をしている部分があり、現時点で考える問題解決への直線ルートを書き出しました。

## レビューコメントを書き出す

次にメンターから頂いたレビューコメントを書き出し整理します

このコメントはいくつかのタイプに分類できると思います

1. 可読性

2. チームのルール理解不足

3. コード不足

4. 機構理解不足


この中で、再現性のある仕事をするためには２つに分類できます

1.2については、今後どのプログラムを書く際にも必要になります

3.4は全てのタスクで必要になるわけではありませんが、類似タスクでは滅法活用できます

そこで、これらのついて頂いたコメントから分類整理を行いました

さらに1.2についてはCursorにルールとして追加しました

これによってLLMが自動生成やチェックをする際にルールに合っているかどうかのチェックが可能になります

時短大事

## 今後使用できそうなpythonスクリプトをまとめる

最後に再利用可能そうなpythonスクリプトをまとめる、です

今回SQLをメインに記述していました

ただ量が多くsnowflakeのクエリ上限1MBを超えることになりました

そこでSQLを要素ごとに分解することに

ただでさえ要素が多いので、手書きやLLMで生成させるとミスが増えます

そこでpythonでSQLコードを生成していました

これによって大文字小文字やsuffixの追加削除などを一括で行うことができました

このPyhonについてはもう少し汎用的なコードに置き換えることで、今後のタスクでも活用できると思います

今回使用したプログラムを綺麗にまとめ、次にはより早くSQL記述が終わるように知識を蓄えます

# まとめ

今回は、以下に次回以降の時短を目指して行くか考えながらSQL記述や機構理解に努めました

次回以降のスピードアップのため、使える知識を蓄えることを目指します

業務開始前の3時間でなんとか前日までのタスクから使える部分をストックして、時短を目指すぞ！
```

翻訳後の英語記事を以下の形式で出力してください:
```markdown
[翻訳された記事の内容]
```