name: Lighthouse CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          
      - name: Enable pnpm
        run: corepack enable
        
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build site
        run: pnpm build
        
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v12
        with:
          # „Éì„É´„Éâ„Åï„Çå„Åü„Çµ„Ç§„Éà„Çí„Çµ„Éº„Éñ„Åó„Å¶Ê∏¨ÂÆö
          temporaryPublicStorage: true
          uploadArtifacts: true
          runs: 3 # 3ÂõûÂÆüË°å„Åó„Å¶Âπ≥Âùá„ÇíÂèñ„Çã
          configPath: './.lighthouserc.json'
          
      - name: Format Lighthouse Score
        if: always()
        id: format_lighthouse_score
        run: |
          # .lighthouseci „Éá„Ç£„É¨„ÇØ„Éà„É™„Åã„ÇâÊúÄÊñ∞„ÅÆJSON„Éï„Ç°„Ç§„É´„ÇíÂèñÂæó
          if [ -d ".lighthouseci" ]; then
            LATEST_JSON=$(find .lighthouseci -name "lhr-*.json" | sort | tail -n 1)
            if [ -f "$LATEST_JSON" ]; then
              # „Çπ„Ç≥„Ç¢„ÇíÊäΩÂá∫
              PERFORMANCE=$(jq -r '.categories.performance.score // 0' "$LATEST_JSON" | awk '{printf "%.0f", $1*100}')
              ACCESSIBILITY=$(jq -r '.categories.accessibility.score // 0' "$LATEST_JSON" | awk '{printf "%.0f", $1*100}')
              BEST_PRACTICES=$(jq -r '.categories["best-practices"].score // 0' "$LATEST_JSON" | awk '{printf "%.0f", $1*100}')
              SEO=$(jq -r '.categories.seo.score // 0' "$LATEST_JSON" | awk '{printf "%.0f", $1*100}')
              
              # Core Web Vitals
              FCP=$(jq -r '.audits["first-contentful-paint"].numericValue // 0' "$LATEST_JSON" | awk '{printf "%.2f", $1/1000}')
              LCP=$(jq -r '.audits["largest-contentful-paint"].numericValue // 0' "$LATEST_JSON" | awk '{printf "%.2f", $1/1000}')
              TBT=$(jq -r '.audits["total-blocking-time"].numericValue // 0' "$LATEST_JSON" | awk '{printf "%.0f", $1}')
              CLS=$(jq -r '.audits["cumulative-layout-shift"].numericValue // 0' "$LATEST_JSON" | awk '{printf "%.3f", $1}')
              
              # ÁµêÊûú„ÇíÂá∫ÂäõÁî®„Å´‰øùÂ≠ò
              echo "PERFORMANCE=$PERFORMANCE" >> $GITHUB_OUTPUT
              echo "ACCESSIBILITY=$ACCESSIBILITY" >> $GITHUB_OUTPUT
              echo "BEST_PRACTICES=$BEST_PRACTICES" >> $GITHUB_OUTPUT
              echo "SEO=$SEO" >> $GITHUB_OUTPUT
              echo "FCP=$FCP" >> $GITHUB_OUTPUT
              echo "LCP=$LCP" >> $GITHUB_OUTPUT
              echo "TBT=$TBT" >> $GITHUB_OUTPUT
              echo "CLS=$CLS" >> $GITHUB_OUTPUT
            fi
          fi
          
      - name: Comment on PR
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## üö¶ Lighthouse Results
            
            ### „Ç´„ÉÜ„Ç¥„É™„Çπ„Ç≥„Ç¢
            | Metric | Score | Status |
            |--------|-------|--------|
            | üöÄ Performance | ${{ steps.format_lighthouse_score.outputs.PERFORMANCE }}/100 | ${${{ steps.format_lighthouse_score.outputs.PERFORMANCE }} >= 80 ? '‚úÖ' : ${{ steps.format_lighthouse_score.outputs.PERFORMANCE }} >= 50 ? '‚ö†Ô∏è' : '‚ùå'} |
            | ‚ôø Accessibility | ${{ steps.format_lighthouse_score.outputs.ACCESSIBILITY }}/100 | ${${{ steps.format_lighthouse_score.outputs.ACCESSIBILITY }} >= 90 ? '‚úÖ' : ${{ steps.format_lighthouse_score.outputs.ACCESSIBILITY }} >= 80 ? '‚ö†Ô∏è' : '‚ùå'} |
            | üìã Best Practices | ${{ steps.format_lighthouse_score.outputs.BEST_PRACTICES }}/100 | ${${{ steps.format_lighthouse_score.outputs.BEST_PRACTICES }} >= 90 ? '‚úÖ' : ${{ steps.format_lighthouse_score.outputs.BEST_PRACTICES }} >= 70 ? '‚ö†Ô∏è' : '‚ùå'} |
            | üîç SEO | ${{ steps.format_lighthouse_score.outputs.SEO }}/100 | ${${{ steps.format_lighthouse_score.outputs.SEO }} >= 90 ? '‚úÖ' : ${{ steps.format_lighthouse_score.outputs.SEO }} >= 80 ? '‚ö†Ô∏è' : '‚ùå'} |
            
            ### Core Web Vitals
            | Metric | Value | Status |
            |--------|-------|--------|
            | First Contentful Paint | ${{ steps.format_lighthouse_score.outputs.FCP }}s | ${${{ steps.format_lighthouse_score.outputs.FCP }} <= 1.8 ? '‚úÖ' : ${{ steps.format_lighthouse_score.outputs.FCP }} <= 3 ? '‚ö†Ô∏è' : '‚ùå'} |
            | Largest Contentful Paint | ${{ steps.format_lighthouse_score.outputs.LCP }}s | ${${{ steps.format_lighthouse_score.outputs.LCP }} <= 2.5 ? '‚úÖ' : ${{ steps.format_lighthouse_score.outputs.LCP }} <= 4 ? '‚ö†Ô∏è' : '‚ùå'} |
            | Total Blocking Time | ${{ steps.format_lighthouse_score.outputs.TBT }}ms | ${${{ steps.format_lighthouse_score.outputs.TBT }} <= 200 ? '‚úÖ' : ${{ steps.format_lighthouse_score.outputs.TBT }} <= 600 ? '‚ö†Ô∏è' : '‚ùå'} |
            | Cumulative Layout Shift | ${{ steps.format_lighthouse_score.outputs.CLS }} | ${${{ steps.format_lighthouse_score.outputs.CLS }} <= 0.1 ? '‚úÖ' : ${{ steps.format_lighthouse_score.outputs.CLS }} <= 0.25 ? '‚ö†Ô∏è' : '‚ùå'} |
            
            [Ë©≥Á¥∞„Å™„É¨„Éù„Éº„Éà„ÇíË¶ã„Çã](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });